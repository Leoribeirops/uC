;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 21/10/2023 16:31:34
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF45  	GOTO        138
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_displayDigit:
;Ex13.c,16 :: 		void displayDigit(unsigned char digit, unsigned char displaySelect) {
;Ex13.c,17 :: 		portd = segmentPatterns[digit];  // Coloca o padrão do dígito no PORTD
0x001C	0x0E1E      	MOVLW       _segmentPatterns
0x001E	0x241B      	ADDWF       FARG_displayDigit_digit, 0 
0x0020	0x6EF6      	MOVWF       TBLPTR 
0x0022	0x0E01      	MOVLW       hi_addr(_segmentPatterns)
0x0024	0x6EF7      	MOVWF       TBLPTR+1 
0x0026	0x0E00      	MOVLW       0
0x0028	0x22F7      	ADDWFC      TBLPTR+1, 1 
0x002A	0x0E00      	MOVLW       higher_addr(_segmentPatterns)
0x002C	0x6EF8      	MOVWF       TBLPTR+2 
0x002E	0x0E00      	MOVLW       0
0x0030	0x22F8      	ADDWFC      TBLPTR+2, 1 
0x0032	0x0009      	TBLRD*+
0x0034	0xFF83CFF5  	MOVFF       TABLAT, PORTD
;Ex13.c,18 :: 		porta = displaySelect;  // Ativa o display correspondente
0x0038	0xFF80C01C  	MOVFF       FARG_displayDigit_displaySelect, PORTA
;Ex13.c,19 :: 		delay_ms(1);  // Mantém o display ligado por 1 ms
0x003C	0x0E03      	MOVLW       3
0x003E	0x6E0C      	MOVWF       R12, 0
0x0040	0x0E97      	MOVLW       151
0x0042	0x6E0D      	MOVWF       R13, 0
L_displayDigit0:
0x0044	0x2E0D      	DECFSZ      R13, 1, 0
0x0046	0xD7FE      	BRA         L_displayDigit0
0x0048	0x2E0C      	DECFSZ      R12, 1, 0
0x004A	0xD7FC      	BRA         L_displayDigit0
0x004C	0x0000      	NOP
0x004E	0x0000      	NOP
;Ex13.c,20 :: 		porta = 0;  // Desativa o display
0x0050	0x6A80      	CLRF        PORTA 
;Ex13.c,21 :: 		}
L_end_displayDigit:
0x0052	0x0012      	RETURN      0
; end of _displayDigit
_Div_16X16_U:
;__Lib_Math.c,102 :: 		
;__Lib_Math.c,109 :: 		
0x0054	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,110 :: 		
0x0056	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,111 :: 		
0x0058	0x0E10      	MOVLW       16
;__Lib_Math.c,112 :: 		
0x005A	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,113 :: 		
0x005C	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,114 :: 		
0x005E	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,115 :: 		
0x0060	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,116 :: 		
0x0062	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,117 :: 		
0x0064	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,118 :: 		
0x0066	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,119 :: 		
0x0068	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,120 :: 		
0x006A	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,121 :: 		
0x006C	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,122 :: 		
0x006E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,123 :: 		
0x0070	0xD007      	BRA         $+16
;__Lib_Math.c,124 :: 		
0x0072	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,125 :: 		
0x0074	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,126 :: 		
0x0076	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,127 :: 		
0x0078	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,128 :: 		
0x007A	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,129 :: 		
0x007C	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,130 :: 		
0x007E	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,131 :: 		
0x0080	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,132 :: 		
0x0082	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,133 :: 		
0x0084	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,134 :: 		
0x0086	0xD7EA      	BRA         $-42
;__Lib_Math.c,136 :: 		
L_end_Div_16X16_U:
0x0088	0x0012      	RETURN      0
; end of _Div_16X16_U
_main:
;Ex13.c,23 :: 		void main() {
;Ex13.c,24 :: 		unsigned int number = 123;  // Variável que contém o número a ser exibido
0x008A	0x0E7B      	MOVLW       123
0x008C	0x6E17      	MOVWF       main_number_L0 
0x008E	0x0E00      	MOVLW       0
0x0090	0x6E18      	MOVWF       main_number_L0+1 
;Ex13.c,27 :: 		trisd = 0;  // Configura PORTD como saída
0x0092	0x6A95      	CLRF        TRISD 
;Ex13.c,28 :: 		trisa = 0;  // Configura PORTA como saída
0x0094	0x6A92      	CLRF        TRISA 
;Ex13.c,29 :: 		adcon0 = 0;  // Configura ADCON0 para modo digital
0x0096	0x6AC2      	CLRF        ADCON0 
;Ex13.c,30 :: 		adcon1 = 15;  // Configura ADCON1 para modo digital
0x0098	0x0E0F      	MOVLW       15
0x009A	0x6EC1      	MOVWF       ADCON1 
;Ex13.c,32 :: 		while (1) {  // Loop infinito para manter o programa rodando
L_main1:
;Ex13.c,34 :: 		hundreds = number / 100;
0x009C	0x0E64      	MOVLW       100
0x009E	0x6E04      	MOVWF       R4 
0x00A0	0x0E00      	MOVLW       0
0x00A2	0x6E05      	MOVWF       R5 
0x00A4	0xF000C017  	MOVFF       main_number_L0, R0
0x00A8	0xF001C018  	MOVFF       main_number_L0+1, R1
0x00AC	0xDFD3      	RCALL       _Div_16X16_U
0x00AE	0xF019C000  	MOVFF       R0, FLOC__main
0x00B2	0xF01AC001  	MOVFF       R1, FLOC__main+1
0x00B6	0x0E0A      	MOVLW       10
0x00B8	0x6E04      	MOVWF       R4 
0x00BA	0x0E00      	MOVLW       0
0x00BC	0x6E05      	MOVWF       R5 
0x00BE	0xF000C017  	MOVFF       main_number_L0, R0
0x00C2	0xF001C018  	MOVFF       main_number_L0+1, R1
0x00C6	0xDFC6      	RCALL       _Div_16X16_U
;Ex13.c,35 :: 		tens = (number / 10) % 10;
0x00C8	0x0E0A      	MOVLW       10
0x00CA	0x6E04      	MOVWF       R4 
0x00CC	0x0E00      	MOVLW       0
0x00CE	0x6E05      	MOVWF       R5 
0x00D0	0xDFC1      	RCALL       _Div_16X16_U
0x00D2	0xF000C008  	MOVFF       R8, R0
0x00D6	0xF001C009  	MOVFF       R9, R1
0x00DA	0xF015C000  	MOVFF       R0, main_tens_L0
;Ex13.c,36 :: 		units = number % 10;
0x00DE	0x0E0A      	MOVLW       10
0x00E0	0x6E04      	MOVWF       R4 
0x00E2	0x0E00      	MOVLW       0
0x00E4	0x6E05      	MOVWF       R5 
0x00E6	0xF000C017  	MOVFF       main_number_L0, R0
0x00EA	0xF001C018  	MOVFF       main_number_L0+1, R1
0x00EE	0xDFB2      	RCALL       _Div_16X16_U
0x00F0	0xF000C008  	MOVFF       R8, R0
0x00F4	0xF001C009  	MOVFF       R9, R1
0x00F8	0xF016C000  	MOVFF       R0, main_units_L0
;Ex13.c,39 :: 		displayDigit(hundreds, 0b00001000);  // Exibe centenas no display ativado por RA3
0x00FC	0xF01BC019  	MOVFF       FLOC__main, FARG_displayDigit_digit
0x0100	0x0E08      	MOVLW       8
0x0102	0x6E1C      	MOVWF       FARG_displayDigit_displaySelect 
0x0104	0xDF8B      	RCALL       _displayDigit
;Ex13.c,40 :: 		displayDigit(tens, 0b00010000);  // Exibe dezenas no display ativado por RA4
0x0106	0xF01BC015  	MOVFF       main_tens_L0, FARG_displayDigit_digit
0x010A	0x0E10      	MOVLW       16
0x010C	0x6E1C      	MOVWF       FARG_displayDigit_displaySelect 
0x010E	0xDF86      	RCALL       _displayDigit
;Ex13.c,41 :: 		displayDigit(units, 0b00100000);  // Exibe unidades no display ativado por RA5
0x0110	0xF01BC016  	MOVFF       main_units_L0, FARG_displayDigit_digit
0x0114	0x0E20      	MOVLW       32
0x0116	0x6E1C      	MOVWF       FARG_displayDigit_displaySelect 
0x0118	0xDF81      	RCALL       _displayDigit
;Ex13.c,42 :: 		}
0x011A	0xD7C0      	BRA         L_main1
;Ex13.c,43 :: 		}
L_end_main:
0x011C	0xD7FF      	BRA         $+0
; end of _main
;Ex13.c,2 :: _segmentPatterns
0x011E	0x063F ;_segmentPatterns+0
0x0120	0x4F5B ;_segmentPatterns+2
0x0122	0x2D76 ;_segmentPatterns+4
0x0124	0x077D ;_segmentPatterns+6
0x0126	0x677F ;_segmentPatterns+8
; end of _segmentPatterns
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [56]    _displayDigit
0x0054      [54]    _Div_16X16_U
0x008A     [148]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    main_tens_L0
0x0016       [1]    main_units_L0
0x0017       [2]    main_number_L0
0x0019       [2]    FLOC__main
0x001B       [1]    FARG_displayDigit_digit
0x001C       [1]    FARG_displayDigit_displaySelect
0x0F80       [1]    PORTA
0x0F83       [1]    PORTD
0x0F92       [1]    TRISA
0x0F95       [1]    TRISD
0x0FC1       [1]    ADCON1
0x0FC2       [1]    ADCON0
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [3]    TBLPTR
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x011E      [10]    _segmentPatterns
