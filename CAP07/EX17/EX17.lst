;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 28/10/2023 22:30:41
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF0E  	GOTO        28
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_main:
;EX17.c,5 :: 		void main() {
;EX17.c,6 :: 		trisb.f0 = 0;  // Configura o pino RB0 como saída
0x001C	0x9093      	BCF         TRISB, 0 
;EX17.c,8 :: 		while (1) {  // Loop infinito para repetir o sinal SOS
L_main0:
;EX17.c,10 :: 		for (i = 0; i < 3; i++) {
0x001E	0x6A15      	CLRF        _i 
L_main2:
0x0020	0x0E03      	MOVLW       3
0x0022	0x5C15      	SUBWF       _i, 0 
0x0024	0xE21E      	BC          L_main3
;EX17.c,11 :: 		portb.f0 = 1;  // Liga o buzzer
0x0026	0x8081      	BSF         PORTB, 0 
;EX17.c,12 :: 		delay_ms(Bip_curto);  // Bip curto
0x0028	0x0E02      	MOVLW       2
0x002A	0x6E0B      	MOVWF       R11, 0
0x002C	0x0E04      	MOVLW       4
0x002E	0x6E0C      	MOVWF       R12, 0
0x0030	0x0EBA      	MOVLW       186
0x0032	0x6E0D      	MOVWF       R13, 0
L_main5:
0x0034	0x2E0D      	DECFSZ      R13, 1, 0
0x0036	0xD7FE      	BRA         L_main5
0x0038	0x2E0C      	DECFSZ      R12, 1, 0
0x003A	0xD7FC      	BRA         L_main5
0x003C	0x2E0B      	DECFSZ      R11, 1, 0
0x003E	0xD7FA      	BRA         L_main5
0x0040	0x0000      	NOP
;EX17.c,13 :: 		portb.f0 = 0;  // Desliga o buzzer
0x0042	0x9081      	BCF         PORTB, 0 
;EX17.c,14 :: 		delay_ms(Bip_curto);  // Espera antes do próximo bip
0x0044	0x0E02      	MOVLW       2
0x0046	0x6E0B      	MOVWF       R11, 0
0x0048	0x0E04      	MOVLW       4
0x004A	0x6E0C      	MOVWF       R12, 0
0x004C	0x0EBA      	MOVLW       186
0x004E	0x6E0D      	MOVWF       R13, 0
L_main6:
0x0050	0x2E0D      	DECFSZ      R13, 1, 0
0x0052	0xD7FE      	BRA         L_main6
0x0054	0x2E0C      	DECFSZ      R12, 1, 0
0x0056	0xD7FC      	BRA         L_main6
0x0058	0x2E0B      	DECFSZ      R11, 1, 0
0x005A	0xD7FA      	BRA         L_main6
0x005C	0x0000      	NOP
;EX17.c,10 :: 		for (i = 0; i < 3; i++) {
0x005E	0x2A15      	INCF        _i, 1 
;EX17.c,15 :: 		}
0x0060	0xD7DF      	BRA         L_main2
L_main3:
;EX17.c,17 :: 		delay_ms(400);  // Espera entre bips curtos e longos
0x0062	0x0E05      	MOVLW       5
0x0064	0x6E0B      	MOVWF       R11, 0
0x0066	0x0E0F      	MOVLW       15
0x0068	0x6E0C      	MOVWF       R12, 0
0x006A	0x0EF1      	MOVLW       241
0x006C	0x6E0D      	MOVWF       R13, 0
L_main7:
0x006E	0x2E0D      	DECFSZ      R13, 1, 0
0x0070	0xD7FE      	BRA         L_main7
0x0072	0x2E0C      	DECFSZ      R12, 1, 0
0x0074	0xD7FC      	BRA         L_main7
0x0076	0x2E0B      	DECFSZ      R11, 1, 0
0x0078	0xD7FA      	BRA         L_main7
;EX17.c,20 :: 		for (i = 0; i < 3; i++) {
0x007A	0x6A15      	CLRF        _i 
L_main8:
0x007C	0x0E03      	MOVLW       3
0x007E	0x5C15      	SUBWF       _i, 0 
0x0080	0xE21C      	BC          L_main9
;EX17.c,21 :: 		portb.f0 = 1;  // Liga o buzzer
0x0082	0x8081      	BSF         PORTB, 0 
;EX17.c,22 :: 		delay_ms(Bip_longo);  // Bip longo
0x0084	0x0E03      	MOVLW       3
0x0086	0x6E0B      	MOVWF       R11, 0
0x0088	0x0E08      	MOVLW       8
0x008A	0x6E0C      	MOVWF       R12, 0
0x008C	0x0E77      	MOVLW       119
0x008E	0x6E0D      	MOVWF       R13, 0
L_main11:
0x0090	0x2E0D      	DECFSZ      R13, 1, 0
0x0092	0xD7FE      	BRA         L_main11
0x0094	0x2E0C      	DECFSZ      R12, 1, 0
0x0096	0xD7FC      	BRA         L_main11
0x0098	0x2E0B      	DECFSZ      R11, 1, 0
0x009A	0xD7FA      	BRA         L_main11
;EX17.c,23 :: 		portb.f0 = 0;  // Desliga o buzzer
0x009C	0x9081      	BCF         PORTB, 0 
;EX17.c,24 :: 		delay_ms(Bip_longo);  // Espera antes do próximo bip
0x009E	0x0E03      	MOVLW       3
0x00A0	0x6E0B      	MOVWF       R11, 0
0x00A2	0x0E08      	MOVLW       8
0x00A4	0x6E0C      	MOVWF       R12, 0
0x00A6	0x0E77      	MOVLW       119
0x00A8	0x6E0D      	MOVWF       R13, 0
L_main12:
0x00AA	0x2E0D      	DECFSZ      R13, 1, 0
0x00AC	0xD7FE      	BRA         L_main12
0x00AE	0x2E0C      	DECFSZ      R12, 1, 0
0x00B0	0xD7FC      	BRA         L_main12
0x00B2	0x2E0B      	DECFSZ      R11, 1, 0
0x00B4	0xD7FA      	BRA         L_main12
;EX17.c,20 :: 		for (i = 0; i < 3; i++) {
0x00B6	0x2A15      	INCF        _i, 1 
;EX17.c,25 :: 		}
0x00B8	0xD7E1      	BRA         L_main8
L_main9:
;EX17.c,27 :: 		delay_ms(400);  // Espera entre bips longos e curtos
0x00BA	0x0E05      	MOVLW       5
0x00BC	0x6E0B      	MOVWF       R11, 0
0x00BE	0x0E0F      	MOVLW       15
0x00C0	0x6E0C      	MOVWF       R12, 0
0x00C2	0x0EF1      	MOVLW       241
0x00C4	0x6E0D      	MOVWF       R13, 0
L_main13:
0x00C6	0x2E0D      	DECFSZ      R13, 1, 0
0x00C8	0xD7FE      	BRA         L_main13
0x00CA	0x2E0C      	DECFSZ      R12, 1, 0
0x00CC	0xD7FC      	BRA         L_main13
0x00CE	0x2E0B      	DECFSZ      R11, 1, 0
0x00D0	0xD7FA      	BRA         L_main13
;EX17.c,30 :: 		for (i = 0; i < 3; i++) {
0x00D2	0x6A15      	CLRF        _i 
L_main14:
0x00D4	0x0E03      	MOVLW       3
0x00D6	0x5C15      	SUBWF       _i, 0 
0x00D8	0xE21E      	BC          L_main15
;EX17.c,31 :: 		portb.f0 = 1;  // Liga o buzzer
0x00DA	0x8081      	BSF         PORTB, 0 
;EX17.c,32 :: 		delay_ms(Bip_curto);  // Bip curto
0x00DC	0x0E02      	MOVLW       2
0x00DE	0x6E0B      	MOVWF       R11, 0
0x00E0	0x0E04      	MOVLW       4
0x00E2	0x6E0C      	MOVWF       R12, 0
0x00E4	0x0EBA      	MOVLW       186
0x00E6	0x6E0D      	MOVWF       R13, 0
L_main17:
0x00E8	0x2E0D      	DECFSZ      R13, 1, 0
0x00EA	0xD7FE      	BRA         L_main17
0x00EC	0x2E0C      	DECFSZ      R12, 1, 0
0x00EE	0xD7FC      	BRA         L_main17
0x00F0	0x2E0B      	DECFSZ      R11, 1, 0
0x00F2	0xD7FA      	BRA         L_main17
0x00F4	0x0000      	NOP
;EX17.c,33 :: 		portb.f0 = 0;  // Desliga o buzzer
0x00F6	0x9081      	BCF         PORTB, 0 
;EX17.c,34 :: 		delay_ms(Bip_curto);  // Espera antes do próximo bip
0x00F8	0x0E02      	MOVLW       2
0x00FA	0x6E0B      	MOVWF       R11, 0
0x00FC	0x0E04      	MOVLW       4
0x00FE	0x6E0C      	MOVWF       R12, 0
0x0100	0x0EBA      	MOVLW       186
0x0102	0x6E0D      	MOVWF       R13, 0
L_main18:
0x0104	0x2E0D      	DECFSZ      R13, 1, 0
0x0106	0xD7FE      	BRA         L_main18
0x0108	0x2E0C      	DECFSZ      R12, 1, 0
0x010A	0xD7FC      	BRA         L_main18
0x010C	0x2E0B      	DECFSZ      R11, 1, 0
0x010E	0xD7FA      	BRA         L_main18
0x0110	0x0000      	NOP
;EX17.c,30 :: 		for (i = 0; i < 3; i++) {
0x0112	0x2A15      	INCF        _i, 1 
;EX17.c,35 :: 		}
0x0114	0xD7DF      	BRA         L_main14
L_main15:
;EX17.c,37 :: 		delay_ms(1500);  // Espera 1,5 segundos antes de repetir o sinal SOS
0x0116	0x0E10      	MOVLW       16
0x0118	0x6E0B      	MOVWF       R11, 0
0x011A	0x0E39      	MOVLW       57
0x011C	0x6E0C      	MOVWF       R12, 0
0x011E	0x0E0D      	MOVLW       13
0x0120	0x6E0D      	MOVWF       R13, 0
L_main19:
0x0122	0x2E0D      	DECFSZ      R13, 1, 0
0x0124	0xD7FE      	BRA         L_main19
0x0126	0x2E0C      	DECFSZ      R12, 1, 0
0x0128	0xD7FC      	BRA         L_main19
0x012A	0x2E0B      	DECFSZ      R11, 1, 0
0x012C	0xD7FA      	BRA         L_main19
0x012E	0x0000      	NOP
0x0130	0x0000      	NOP
;EX17.c,38 :: 		}
0x0132	0xD775      	BRA         L_main0
;EX17.c,39 :: 		}
L_end_main:
0x0134	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C     [282]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    _i
0x0F81       [1]    PORTB
0x0F93       [1]    TRISB
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
