;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 18/11/2023 16:12:19
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x285C      	GOTO       92
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0003	0x1283      	BCF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x0822      	MOVF       ___DoICPAddr+1, 0
0x0006	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0007	0x0821      	MOVF       ___DoICPAddr, 0
0x0008	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0009	0x0008      	RETURN
; end of _____DoICP
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x000A	0x300E      	MOVLW      14
0x000B	0x1283      	BCF        STATUS, 5
0x000C	0x1303      	BCF        STATUS, 6
0x000D	0x00FD      	MOVWF      R13
L_Delay_22us1:
0x000E	0x0BFD      	DECFSZ     R13, 1
0x000F	0x280E      	GOTO       L_Delay_22us1
0x0010	0x0000      	NOP
;__Lib_Delays.c,17 :: 		}
L_end_Delay_22us:
0x0011	0x0008      	RETURN
; end of _Delay_22us
_ADC_Read:
;__Lib_ADC_A_C.c,68 :: 		
;__Lib_ADC_A_C.c,70 :: 		
0x0012	0x1283      	BCF        STATUS, 5
0x0013	0x1303      	BCF        STATUS, 6
0x0014	0x019F      	CLRF       ADCON0
;__Lib_ADC_A_C.c,71 :: 		
0x0015	0x30C0      	MOVLW      192
0x0016	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_A_C.c,72 :: 		
0x0017	0x0920      	COMF       _vref_mask, 0
0x0018	0x00F0      	MOVWF      R0
0x0019	0x0870      	MOVF       R0, 0
0x001A	0x1683      	BSF        STATUS, 5
0x001B	0x059F      	ANDWF      ADCON1, 1
;__Lib_ADC_A_C.c,73 :: 		
0x001C	0x171F      	BSF        ADCON1, 6
;__Lib_ADC_A_C.c,74 :: 		
0x001D	0x179F      	BSF        ADCON1, 7
;__Lib_ADC_A_C.c,75 :: 		
0x001E	0x1283      	BCF        STATUS, 5
0x001F	0x0828      	MOVF       FARG_ADC_Read_channel, 0
0x0020	0x00F0      	MOVWF      R0
0x0021	0x0DF0      	RLF        R0, 1
0x0022	0x1070      	BCF        R0, 0
0x0023	0x0DF0      	RLF        R0, 1
0x0024	0x1070      	BCF        R0, 0
0x0025	0x0DF0      	RLF        R0, 1
0x0026	0x1070      	BCF        R0, 0
0x0027	0x0870      	MOVF       R0, 0
0x0028	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_A_C.c,78 :: 		
0x0029	0x141F      	BSF        ADCON0, 0
;__Lib_ADC_A_C.c,81 :: 		
0x002A	0x200A      	CALL       _Delay_22us
;__Lib_ADC_A_C.c,84 :: 		
0x002B	0x151F      	BSF        ADCON0, 2
;__Lib_ADC_A_C.c,87 :: 		
L_ADC_Read2:
0x002C	0x1D1F      	BTFSS      ADCON0, 2
0x002D	0x2830      	GOTO       L_ADC_Read3
;__Lib_ADC_A_C.c,88 :: 		
0x002E	0x0000      	NOP
0x002F	0x282C      	GOTO       L_ADC_Read2
L_ADC_Read3:
;__Lib_ADC_A_C.c,91 :: 		
0x0030	0x101F      	BCF        ADCON0, 0
;__Lib_ADC_A_C.c,94 :: 		
0x0031	0x081E      	MOVF       ADRESH, 0
0x0032	0x00F1      	MOVWF      R0+1
0x0033	0x01F0      	CLRF       R0
0x0034	0x1683      	BSF        STATUS, 5
0x0035	0x081E      	MOVF       ADRESL, 0
0x0036	0x04F0      	IORWF      R0, 1
0x0037	0x3000      	MOVLW      0
0x0038	0x04F1      	IORWF      R0+1, 1
;__Lib_ADC_A_C.c,95 :: 		
L_end_ADC_Read:
0x0039	0x0008      	RETURN
; end of _ADC_Read
_ADC_Init:
;__Lib_ADC_A_C.c,19 :: 		
;__Lib_ADC_A_C.c,20 :: 		
0x003A	0x30FF      	MOVLW      _ADC_Get_Sample
0x003B	0x1283      	BCF        STATUS, 5
0x003C	0x1303      	BCF        STATUS, 6
0x003D	0x00A3      	MOVWF      _ADC_Get_Sample_Ptr
0x003E	0x30FF      	MOVLW      hi_addr(_ADC_Get_Sample)
0x003F	0x00A4      	MOVWF      _ADC_Get_Sample_Ptr+1
0x0040	0x30FF      	MOVLW      FARG_ADC_Get_Sample_channel
0x0041	0x00A5      	MOVWF      _ADC_Get_Sample_Ptr+2
0x0042	0x30FF      	MOVLW      hi_addr(FARG_ADC_Get_Sample_channel)
;__Lib_ADC_A_C.c,22 :: 		
0x0043	0x019F      	CLRF       ADCON0
;__Lib_ADC_A_C.c,23 :: 		
0x0044	0x30C0      	MOVLW      192
0x0045	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_A_C.c,24 :: 		
0x0046	0x0920      	COMF       _vref_mask, 0
0x0047	0x00F0      	MOVWF      R0
0x0048	0x0870      	MOVF       R0, 0
0x0049	0x1683      	BSF        STATUS, 5
0x004A	0x059F      	ANDWF      ADCON1, 1
;__Lib_ADC_A_C.c,25 :: 		
0x004B	0x171F      	BSF        ADCON1, 6
;__Lib_ADC_A_C.c,26 :: 		
0x004C	0x179F      	BSF        ADCON1, 7
;__Lib_ADC_A_C.c,29 :: 		
0x004D	0x1283      	BCF        STATUS, 5
0x004E	0x141F      	BSF        ADCON0, 0
;__Lib_ADC_A_C.c,30 :: 		
L_end_ADC_Init:
0x004F	0x0008      	RETURN
; end of _ADC_Init
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0050	0x2003      	CALL       _____DoICP
0x0051	0x118A      	BCF        PCLATH, 3
0x0052	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0053	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0054	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0055	0x0AA1      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0056	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0057	0x0AA2      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0058	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0059	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x005A	0x2850      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x005B	0x0008      	RETURN
; end of ___CC2DW
_main:
0x005C	0x20A0      	CALL       160
;Ex_16.c,1 :: 		void main() {
;Ex_16.c,6 :: 		trisa = 0xFF; // Configura a porta A como entrada
0x005D	0x30FF      	MOVLW      255
0x005E	0x1683      	BSF        STATUS, 5
0x005F	0x1303      	BCF        STATUS, 6
0x0060	0x0085      	MOVWF      TRISA
;Ex_16.c,7 :: 		trisc.f2 = 0; // Configura o pino RC2 como saída para o ventilador
0x0061	0x1107      	BCF        TRISC, 2
;Ex_16.c,8 :: 		portc.f2 = 0; // Inicialmente, o ventilador está desligado
0x0062	0x1283      	BCF        STATUS, 5
0x0063	0x1107      	BCF        PORTC, 2
;Ex_16.c,10 :: 		adcon1 = 0x80; // Configura a porta A para entrada analógica
0x0064	0x3080      	MOVLW      128
0x0065	0x1683      	BSF        STATUS, 5
0x0066	0x009F      	MOVWF      ADCON1
;Ex_16.c,11 :: 		adc_init(); // Inicializa o módulo ADC
0x0067	0x203A      	CALL       _ADC_Init
;Ex_16.c,13 :: 		while(1) {
L_main0:
;Ex_16.c,14 :: 		adcValue = adc_read(0); // Lê o valor do ADC no canal 0 (RA0)
0x0068	0x01A8      	CLRF       FARG_ADC_Read_channel
0x0069	0x2012      	CALL       _ADC_Read
0x006A	0x0870      	MOVF       R0, 0
0x006B	0x1283      	BCF        STATUS, 5
0x006C	0x00A6      	MOVWF      main_adcValue_L0
0x006D	0x0871      	MOVF       R0+1, 0
0x006E	0x00A7      	MOVWF      main_adcValue_L0+1
;Ex_16.c,16 :: 		if (adcValue >= thresholdOn) {
0x006F	0x3080      	MOVLW      128
0x0070	0x0671      	XORWF      R0+1, 0
0x0071	0x00F2      	MOVWF      R2
0x0072	0x3080      	MOVLW      128
0x0073	0x3A03      	XORLW      3
0x0074	0x0272      	SUBWF      R2, 0
0x0075	0x1D03      	BTFSS      STATUS, 2
0x0076	0x2879      	GOTO       L__main7
0x0077	0x3032      	MOVLW      50
0x0078	0x0270      	SUBWF      R0, 0
L__main7:
0x0079	0x1C03      	BTFSS      STATUS, 0
0x007A	0x287D      	GOTO       L_main2
;Ex_16.c,17 :: 		portc.f2 = 1; // Liga o ventilador
0x007B	0x1507      	BSF        PORTC, 2
;Ex_16.c,18 :: 		} else if (adcValue < thresholdOff) {
0x007C	0x288A      	GOTO       L_main3
L_main2:
0x007D	0x3080      	MOVLW      128
0x007E	0x0627      	XORWF      main_adcValue_L0+1, 0
0x007F	0x00F0      	MOVWF      R0
0x0080	0x3080      	MOVLW      128
0x0081	0x3A01      	XORLW      1
0x0082	0x0270      	SUBWF      R0, 0
0x0083	0x1D03      	BTFSS      STATUS, 2
0x0084	0x2887      	GOTO       L__main8
0x0085	0x3099      	MOVLW      153
0x0086	0x0226      	SUBWF      main_adcValue_L0, 0
L__main8:
0x0087	0x1803      	BTFSC      STATUS, 0
0x0088	0x288A      	GOTO       L_main4
;Ex_16.c,19 :: 		portc.f2 = 0; // Desliga o ventilador
0x0089	0x1107      	BCF        PORTC, 2
;Ex_16.c,20 :: 		}
L_main4:
L_main3:
;Ex_16.c,22 :: 		delay_ms(100); // Pequena pausa para estabilização
0x008A	0x3002      	MOVLW      2
0x008B	0x00FB      	MOVWF      R11
0x008C	0x3004      	MOVLW      4
0x008D	0x00FC      	MOVWF      R12
0x008E	0x30BA      	MOVLW      186
0x008F	0x00FD      	MOVWF      R13
L_main5:
0x0090	0x0BFD      	DECFSZ     R13, 1
0x0091	0x2890      	GOTO       L_main5
0x0092	0x0BFC      	DECFSZ     R12, 1
0x0093	0x2890      	GOTO       L_main5
0x0094	0x0BFB      	DECFSZ     R11, 1
0x0095	0x2890      	GOTO       L_main5
0x0096	0x0000      	NOP
;Ex_16.c,23 :: 		}
0x0097	0x2868      	GOTO       L_main0
;Ex_16.c,24 :: 		}
L_end_main:
0x0098	0x2898      	GOTO       $+0
; end of _main
0x00A0	0x3020      	MOVLW      32
0x00A1	0x0084      	MOVWF      FSR
0x00A2	0x3001      	MOVLW      1
0x00A3	0x1283      	BCF        STATUS, 5
0x00A4	0x1303      	BCF        STATUS, 6
0x00A5	0x00F0      	MOVWF      R0
0x00A6	0x309E      	MOVLW      158
0x00A7	0x00A1      	MOVWF      ___DoICPAddr
0x00A8	0x3000      	MOVLW      0
0x00A9	0x00A2      	MOVWF      34
0x00AA	0x2050      	CALL       80
0x00AB	0x0008      	RETURN
;__Lib_ADC_A_C.c,0 :: ?ICS_vref_mask
0x009E	0x340F ;?ICS_vref_mask+0
; end of ?ICS_vref_mask
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003       [7]    _____DoICP
0x000A       [8]    _Delay_22us
0x0012      [40]    _ADC_Read
0x003A      [22]    _ADC_Init
0x0050      [12]    ___CC2DW
0x005C      [60]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0007       [1]    PORTC
0x000A       [1]    PCLATH
0x001E       [1]    ADRESH
0x001F       [1]    ADCON0
0x0020       [1]    _vref_mask
0x0021       [2]    ___DoICPAddr
0x0023       [3]    _ADC_Get_Sample_Ptr
0x0026       [2]    main_adcValue_L0
0x0028       [1]    FARG_ADC_Read_channel
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [1]    TRISA
0x0087       [1]    TRISC
0x009E       [1]    ADRESL
0x009F       [1]    ADCON1
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x009E       [1]    ?ICS_vref_mask
