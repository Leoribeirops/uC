;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 04/11/2023 14:14:25
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF52  	GOTO        164
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_pisca_led:
;Ex01.c,1 :: 		void pisca_led (int led1, int led2, int num_piscadas) // função para piscar LEDs
;Ex01.c,4 :: 		for (i = 0; i < num_piscadas; i++) // para i variando de 0 a num_piscadas, faça:
0x001C	0x6A03      	CLRF        R3 
0x001E	0x6A04      	CLRF        R4 
L_pisca_led0:
0x0020	0x0E80      	MOVLW       128
0x0022	0x1804      	XORWF       R4, 0 
0x0024	0x6E00      	MOVWF       R0 
0x0026	0x0E80      	MOVLW       128
0x0028	0x181A      	XORWF       FARG_pisca_led_num_piscadas+1, 0 
0x002A	0x5C00      	SUBWF       R0, 0 
0x002C	0xE102      	BNZ         L__pisca_led10
0x002E	0x5019      	MOVF        FARG_pisca_led_num_piscadas, 0 
0x0030	0x5C03      	SUBWF       R3, 0 
L__pisca_led10:
0x0032	0xE237      	BC          L_pisca_led1
;Ex01.c,6 :: 		portd = (1 << led1) | (1 << led2); // liga os LEDS especificados,
0x0034	0xF000C015  	MOVFF       FARG_pisca_led_led1, R0
0x0038	0x0E01      	MOVLW       1
0x003A	0x6E02      	MOVWF       R2 
0x003C	0x5000      	MOVF        R0, 0 
L__pisca_led11:
0x003E	0xE004      	BZ          L__pisca_led12
0x0040	0x3602      	RLCF        R2, 1 
0x0042	0x9002      	BCF         R2, 0 
0x0044	0x0FFF      	ADDLW       255
0x0046	0xD7FB      	BRA         L__pisca_led11
L__pisca_led12:
0x0048	0xF001C017  	MOVFF       FARG_pisca_led_led2, R1
0x004C	0x0E01      	MOVLW       1
0x004E	0x6E00      	MOVWF       R0 
0x0050	0x5001      	MOVF        R1, 0 
L__pisca_led13:
0x0052	0xE004      	BZ          L__pisca_led14
0x0054	0x3600      	RLCF        R0, 1 
0x0056	0x9000      	BCF         R0, 0 
0x0058	0x0FFF      	ADDLW       255
0x005A	0xD7FB      	BRA         L__pisca_led13
L__pisca_led14:
0x005C	0x5000      	MOVF        R0, 0 
0x005E	0x1002      	IORWF       R2, 0 
0x0060	0x6E83      	MOVWF       PORTD 
;Ex01.c,7 :: 		delay_ms(500); // espera 500 ms (1 Hz = 1 piscada por segundo, então uma piscada leva 1000 ms. 500 ms ligado e 500 ms desligado),
0x0062	0x0E06      	MOVLW       6
0x0064	0x6E0B      	MOVWF       R11, 0
0x0066	0x0E13      	MOVLW       19
0x0068	0x6E0C      	MOVWF       R12, 0
0x006A	0x0EAD      	MOVLW       173
0x006C	0x6E0D      	MOVWF       R13, 0
L_pisca_led3:
0x006E	0x2E0D      	DECFSZ      R13, 1, 0
0x0070	0xD7FE      	BRA         L_pisca_led3
0x0072	0x2E0C      	DECFSZ      R12, 1, 0
0x0074	0xD7FC      	BRA         L_pisca_led3
0x0076	0x2E0B      	DECFSZ      R11, 1, 0
0x0078	0xD7FA      	BRA         L_pisca_led3
0x007A	0x0000      	NOP
0x007C	0x0000      	NOP
;Ex01.c,8 :: 		portd = 0; // desliga os diodos,
0x007E	0x6A83      	CLRF        PORTD 
;Ex01.c,9 :: 		delay_ms(500); // espera 500 ms.
0x0080	0x0E06      	MOVLW       6
0x0082	0x6E0B      	MOVWF       R11, 0
0x0084	0x0E13      	MOVLW       19
0x0086	0x6E0C      	MOVWF       R12, 0
0x0088	0x0EAD      	MOVLW       173
0x008A	0x6E0D      	MOVWF       R13, 0
L_pisca_led4:
0x008C	0x2E0D      	DECFSZ      R13, 1, 0
0x008E	0xD7FE      	BRA         L_pisca_led4
0x0090	0x2E0C      	DECFSZ      R12, 1, 0
0x0092	0xD7FC      	BRA         L_pisca_led4
0x0094	0x2E0B      	DECFSZ      R11, 1, 0
0x0096	0xD7FA      	BRA         L_pisca_led4
0x0098	0x0000      	NOP
0x009A	0x0000      	NOP
;Ex01.c,4 :: 		for (i = 0; i < num_piscadas; i++) // para i variando de 0 a num_piscadas, faça:
0x009C	0x4A03      	INFSNZ      R3, 1 
0x009E	0x2A04      	INCF        R4, 1 
;Ex01.c,10 :: 		}
0x00A0	0xD7BF      	BRA         L_pisca_led0
L_pisca_led1:
;Ex01.c,11 :: 		}
L_end_pisca_led:
0x00A2	0x0012      	RETURN      0
; end of _pisca_led
_main:
;Ex01.c,13 :: 		void main() // início da função principal
;Ex01.c,15 :: 		trisd = 0; // configura os pinos da porta D como saída,
0x00A4	0x6A95      	CLRF        TRISD 
;Ex01.c,16 :: 		portd = 0; // zera os pinos da porta D,
0x00A6	0x6A83      	CLRF        PORTD 
;Ex01.c,17 :: 		while(1) // início de um loop infinito
L_main5:
;Ex01.c,19 :: 		pisca_led(0, 3, 20); // pisca os LEDs 0 e 3, 20 vezes,
0x00A8	0x6A15      	CLRF        FARG_pisca_led_led1 
0x00AA	0x6A16      	CLRF        FARG_pisca_led_led1+1 
0x00AC	0x0E03      	MOVLW       3
0x00AE	0x6E17      	MOVWF       FARG_pisca_led_led2 
0x00B0	0x0E00      	MOVLW       0
0x00B2	0x6E18      	MOVWF       FARG_pisca_led_led2+1 
0x00B4	0x0E14      	MOVLW       20
0x00B6	0x6E19      	MOVWF       FARG_pisca_led_num_piscadas 
0x00B8	0x0E00      	MOVLW       0
0x00BA	0x6E1A      	MOVWF       FARG_pisca_led_num_piscadas+1 
0x00BC	0xDFAF      	RCALL       _pisca_led
;Ex01.c,20 :: 		delay_ms(5000); // espera 5 segundos,
0x00BE	0x0E33      	MOVLW       51
0x00C0	0x6E0B      	MOVWF       R11, 0
0x00C2	0x0EBB      	MOVLW       187
0x00C4	0x6E0C      	MOVWF       R12, 0
0x00C6	0x0EDF      	MOVLW       223
0x00C8	0x6E0D      	MOVWF       R13, 0
L_main7:
0x00CA	0x2E0D      	DECFSZ      R13, 1, 0
0x00CC	0xD7FE      	BRA         L_main7
0x00CE	0x2E0C      	DECFSZ      R12, 1, 0
0x00D0	0xD7FC      	BRA         L_main7
0x00D2	0x2E0B      	DECFSZ      R11, 1, 0
0x00D4	0xD7FA      	BRA         L_main7
0x00D6	0x0000      	NOP
0x00D8	0x0000      	NOP
;Ex01.c,21 :: 		pisca_led(1, 2, 30); // pisca os LEDs 1 e 2, 30 vezes,
0x00DA	0x0E01      	MOVLW       1
0x00DC	0x6E15      	MOVWF       FARG_pisca_led_led1 
0x00DE	0x0E00      	MOVLW       0
0x00E0	0x6E16      	MOVWF       FARG_pisca_led_led1+1 
0x00E2	0x0E02      	MOVLW       2
0x00E4	0x6E17      	MOVWF       FARG_pisca_led_led2 
0x00E6	0x0E00      	MOVLW       0
0x00E8	0x6E18      	MOVWF       FARG_pisca_led_led2+1 
0x00EA	0x0E1E      	MOVLW       30
0x00EC	0x6E19      	MOVWF       FARG_pisca_led_num_piscadas 
0x00EE	0x0E00      	MOVLW       0
0x00F0	0x6E1A      	MOVWF       FARG_pisca_led_num_piscadas+1 
0x00F2	0xDF94      	RCALL       _pisca_led
;Ex01.c,22 :: 		delay_ms(5000); // espera 5 segundos.
0x00F4	0x0E33      	MOVLW       51
0x00F6	0x6E0B      	MOVWF       R11, 0
0x00F8	0x0EBB      	MOVLW       187
0x00FA	0x6E0C      	MOVWF       R12, 0
0x00FC	0x0EDF      	MOVLW       223
0x00FE	0x6E0D      	MOVWF       R13, 0
L_main8:
0x0100	0x2E0D      	DECFSZ      R13, 1, 0
0x0102	0xD7FE      	BRA         L_main8
0x0104	0x2E0C      	DECFSZ      R12, 1, 0
0x0106	0xD7FC      	BRA         L_main8
0x0108	0x2E0B      	DECFSZ      R11, 1, 0
0x010A	0xD7FA      	BRA         L_main8
0x010C	0x0000      	NOP
0x010E	0x0000      	NOP
;Ex01.c,23 :: 		}
0x0110	0xD7CB      	BRA         L_main5
;Ex01.c,24 :: 		}
L_end_main:
0x0112	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C     [136]    _pisca_led
0x00A4     [112]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [2]    pisca_led_i_L0
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [2]    FARG_pisca_led_led1
0x0017       [2]    FARG_pisca_led_led2
0x0019       [2]    FARG_pisca_led_num_piscadas
0x0F83       [1]    PORTD
0x0F95       [1]    TRISD
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
